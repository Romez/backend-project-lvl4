mixin formFor(entity = null)
  form&attributes(attributes)
    block

mixin input(entity, propertyName, label, errors = [])
  - error = errors.find((error) => error.property === propertyName)
  .form-group(class=(errors[propertyName] && 'has-danger'))
    label= label

    input(
      name=propertyName
      class='form-control'
      value=_.get(entity, propertyName, '')
    )&attributes(attributes)

    if error
      .form-control-feedback.text-danger= Object.values(error.constraints).join('. ')

mixin checkbox(entity, propertyName, label, errors = [])
  - error = errors.find((error) => error.property === propertyName)
  .form-group
    .form-check(class=(errors[propertyName] && 'has-danger'))
      input(
        class='form-check-input'
        type='checkbox'
        checked=_.get(entity, propertyName, '')
        name=propertyName
      )&attributes(attributes)

      label(class='form-check-label')= label

      if error
        .form-control-feedback.text-danger= Object.values(error.constraints).join('. ')

mixin select(entity, items, propertyName, label, errors = [])
  - error = errors.find((error) => error.property === propertyName)
  .form-group(class=(errors[propertyName] && 'has-danger'))
    label= label

    select(
      name=propertyName
      class='form-control'
    )&attributes(attributes)
      each item in items
        option(value=item.id selected=item.id === parseInt(_.get(entity, [propertyName, 'id']), 10)) #{item.name}

    if error
      .form-control-feedback.text-danger= Object.values(error.constraints).join('. ')

mixin submit()
  .form-group
    input(class='btn btn-success' type='submit')&attributes(attributes)

mixin buttonTo(action, method)
  form(action=action, method="post")
    input(name="_method" type="hidden" value=method)
    input(type='submit')&attributes(attributes)
